{"version":3,"file":"sui.js.cjs.production.min.js","sources":["../src/serialization/base64.ts","../src/cryptography/publickey.ts","../src/cryptography/ed25519-keypair.ts","../src/providers/provider.ts","../node_modules/regenerator-runtime/runtime.js","../src/index.guard.ts","../src/rpc/client.guard.ts","../src/rpc/client.ts","../src/types/objects.ts","../src/types/framework/transformer.ts","../src/providers/json-rpc-provider.ts","../src/serialization/hex.ts","../src/signers/txn-data-serializers/rpc-txn-data-serializer.ts","../src/providers/void-provider.ts","../src/signers/signer-with-provider.ts","../src/signers/raw-signer.ts","../src/types/transactions.ts","../src/bcs/index.ts"],"sourcesContent":["// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Buffer } from 'buffer';\n\nexport class Base64DataBuffer {\n  private data: Uint8Array;\n\n  constructor(data: Uint8Array | string) {\n    if (typeof data === 'string') {\n      this.data = new Uint8Array(Buffer.from(data, 'base64'));\n    } else {\n      this.data = data;\n    }\n  }\n\n  getData(): Uint8Array {\n    return this.data;\n  }\n\n  getLength(): number {\n    return this.data.length;\n  }\n\n  toString(): string {\n    return Buffer.from(this.data).toString('base64');\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport BN from 'bn.js';\nimport { Buffer } from 'buffer';\nimport { sha3_256 } from 'js-sha3';\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nexport const PUBLIC_KEY_SIZE = 32;\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-64 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        const buffer = Buffer.from(value, 'base64');\n        if (buffer.length !== 32) {\n          throw new Error(\n            `Invalid public key input. Expected 32 bytes, got ${buffer.length}`\n          );\n        }\n        this._bn = new BN(buffer);\n      } else {\n        this._bn = new BN(value);\n      }\n      if (this._bn.byteLength() > PUBLIC_KEY_SIZE) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-64 representation of the public key\n   */\n  toBase64(): string {\n    return this.toBuffer().toString('base64');\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_SIZE) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(PUBLIC_KEY_SIZE);\n    b.copy(zeroPad, PUBLIC_KEY_SIZE - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-64 representation of the public key\n   */\n  toString(): string {\n    return this.toBase64();\n  }\n\n  /**\n   * Return the Sui address associated with this public key\n   */\n  toSuiAddress(): string {\n    const hexHash = sha3_256(this.toBytes());\n    const publicKeyBytes = new BN(hexHash, 16).toArray(undefined, 32);\n    // Only take the first 20 bytes\n    const addressBytes = publicKeyBytes.slice(0, 20);\n    return toHexString(addressBytes);\n  }\n}\n\n// https://stackoverflow.com/questions/34309988/byte-array-to-hex-string-conversion-in-javascript\nfunction toHexString(byteArray: number[]) {\n  return byteArray.reduce(\n    (output, elem) => output + ('0' + elem.toString(16)).slice(-2),\n    ''\n  );\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport nacl from 'tweetnacl';\nimport { Base64DataBuffer } from '../serialization/base64';\nimport { Keypair } from './keypair';\nimport { PublicKey } from './publickey';\nimport { TextEncoder } from 'util';\n\n/**\n * Ed25519 Keypair data\n */\nexport interface Ed25519KeypairData {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An Ed25519 Keypair used for signing transactions.\n */\nexport class Ed25519Keypair implements Keypair {\n  private keypair: Ed25519KeypairData;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519KeypairData) {\n    if (keypair) {\n      this.keypair = keypair;\n    } else {\n      this.keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Ed25519Keypair {\n    return new Ed25519Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: { skipValidation?: boolean }\n  ): Ed25519Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('sui validation');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Ed25519Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Ed25519Keypair {\n    return new Ed25519Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  getPublicKey(): PublicKey {\n    return new PublicKey(this.keypair.publicKey);\n  }\n\n  /**\n   * Return the signature for the provided data.\n   */\n  signData(data: Base64DataBuffer): Base64DataBuffer {\n    return new Base64DataBuffer(\n      nacl.sign.detached(data.getData(), this.keypair.secretKey)\n    );\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  GetObjectInfoResponse,\n  ObjectRef,\n  GatewayTxSeqNumber,\n  GetTxnDigestsResponse,\n  TransactionResponse,\n  SignedTransaction,\n} from '../types';\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class Provider {\n  // Objects\n  /**\n   * Get all objects owned by an address\n   */\n  abstract getOwnedObjectRefs(address: string): Promise<ObjectRef[]>;\n\n  /**\n   * Get information about an object\n   */\n  abstract getObjectInfo(objectId: string): Promise<GetObjectInfoResponse>;\n\n  // Transactions\n  /**\n   * Get transaction digests for a given range\n   *\n   * NOTE: this method may get deprecated after DevNet\n   */\n  abstract getTransactionDigestsInRange(\n    start: GatewayTxSeqNumber,\n    end: GatewayTxSeqNumber\n  ): Promise<GetTxnDigestsResponse>;\n\n  /**\n   * Get the latest `count` transactions\n   *\n   * NOTE: this method may get deprecated after DevNet\n   */\n  abstract getRecentTransactions(count: number): Promise<GetTxnDigestsResponse>;\n\n  /**\n   * Get total number of transactions\n   * NOTE: this method may get deprecated after DevNet\n   */\n  abstract getTotalTransactionNumber(): Promise<number>;\n\n  abstract executeTransaction(\n    txn: SignedTransaction\n  ): Promise<TransactionResponse>;\n\n  // TODO: add more interface methods\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * Generated type guards for \"index.ts\".\n * WARNING: Do not manually change this file.\n */\nimport { Ed25519KeypairData, Keypair, PublicKeyInitData, PublicKeyData, TransferCoinTransaction, TxnDataSerializer, TransactionDigest, SuiAddress, ObjectOwner, ObjectRef, ObjectContentField, ObjectContentFields, ObjectContent, MovePackageContent, SuiObject, ObjectExistsInfo, ObjectNotExistsInfo, ObjectStatus, ObjectType, GetOwnedObjectRefsResponse, GetObjectInfoResponse, ObjectDigest, ObjectId, SequenceNumber, RawObjectRef, Transfer, RawAuthoritySignInfo, TransactionKindName, SingleTransactionKind, TransactionKind, TransactionData, EpochId, AuthorityQuorumSignInfo, CertifiedTransaction, GasCostSummary, ExecutionStatusType, ExecutionStatus, ExecutionStatusDetail, OwnedObjectRef, TransactionEffects, TransactionEffectsResponse, GatewayTxSeqNumber, GetTxnDigestsResponse, MoveModulePublish, Event, StructTag, MoveTypeTag, MoveCall, MoveCallArg, EmptySignInfo, AuthorityName, AuthoritySignature, TransactionBytes, TransactionResponse, SignedTransaction } from \"./index\";\nimport { BN } from \"bn.js\";\n\nexport function isEd25519KeypairData(obj: any, _argumentName?: string): obj is Ed25519KeypairData {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.publicKey instanceof Uint8Array &&\n        obj.secretKey instanceof Uint8Array\n    )\n}\n\nexport function isKeypair(obj: any, _argumentName?: string): obj is Keypair {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        typeof obj.getPublicKey === \"function\" &&\n        typeof obj.signData === \"function\"\n    )\n}\n\nexport function isPublicKeyInitData(obj: any, _argumentName?: string): obj is PublicKeyInitData {\n    return (\n        (isTransactionDigest(obj) as boolean ||\n            isSequenceNumber(obj) as boolean ||\n            obj instanceof Buffer ||\n            obj instanceof Uint8Array ||\n            Array.isArray(obj) &&\n            obj.every((e: any) =>\n                isSequenceNumber(e) as boolean\n            ) ||\n            isPublicKeyData(obj) as boolean)\n    )\n}\n\nexport function isPublicKeyData(obj: any, _argumentName?: string): obj is PublicKeyData {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj._bn instanceof BN\n    )\n}\n\nexport function isTransferCoinTransaction(obj: any, _argumentName?: string): obj is TransferCoinTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.signer) as boolean &&\n        isTransactionDigest(obj.objectId) as boolean &&\n        isTransactionDigest(obj.gasPayment) as boolean &&\n        isSequenceNumber(obj.gasBudget) as boolean &&\n        isTransactionDigest(obj.recipient) as boolean\n    )\n}\n\nexport function isTxnDataSerializer(obj: any, _argumentName?: string): obj is TxnDataSerializer {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        typeof obj.newTransferCoin === \"function\"\n    )\n}\n\nexport function isTransactionDigest(obj: any, _argumentName?: string): obj is TransactionDigest {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isSuiAddress(obj: any, _argumentName?: string): obj is SuiAddress {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isObjectOwner(obj: any, _argumentName?: string): obj is ObjectOwner {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isTransactionDigest(obj.AddressOwner) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isTransactionDigest(obj.ObjectOwner) as boolean ||\n            obj === \"Shared\" ||\n            obj === \"Immutable\")\n    )\n}\n\nexport function isObjectRef(obj: any, _argumentName?: string): obj is ObjectRef {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.digest) as boolean &&\n        isTransactionDigest(obj.objectId) as boolean &&\n        isSequenceNumber(obj.version) as boolean\n    )\n}\n\nexport function isObjectContentField(obj: any, _argumentName?: string): obj is ObjectContentField {\n    return (\n        (isTransactionDigest(obj) as boolean ||\n            isSequenceNumber(obj) as boolean ||\n            obj === false ||\n            obj === true ||\n            Array.isArray(obj) &&\n            obj.every((e: any) =>\n                isSequenceNumber(e) as boolean\n            ) ||\n            isObjectContent(obj) as boolean ||\n            Array.isArray(obj) &&\n            obj.every((e: any) =>\n                isObjectContent(e) as boolean\n            ))\n    )\n}\n\nexport function isObjectContentFields(obj: any, _argumentName?: string): obj is ObjectContentFields {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Object.entries<any>(obj)\n            .every(([key, value]) => (isObjectContentField(value) as boolean &&\n                isTransactionDigest(key) as boolean))\n    )\n}\n\nexport function isObjectContent(obj: any, _argumentName?: string): obj is ObjectContent {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isObjectContentFields(obj.fields) as boolean &&\n        isTransactionDigest(obj.type) as boolean\n    )\n}\n\nexport function isMovePackageContent(obj: any, _argumentName?: string): obj is MovePackageContent {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Object.entries<any>(obj)\n            .every(([key, value]) => (isTransactionDigest(value) as boolean &&\n                isTransactionDigest(key) as boolean))\n    )\n}\n\nexport function isSuiObject(obj: any, _argumentName?: string): obj is SuiObject {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        (isObjectContent(obj.contents) as boolean ||\n            isMovePackageContent(obj.contents) as boolean) &&\n        isObjectOwner(obj.owner) as boolean &&\n        isTransactionDigest(obj.tx_digest) as boolean\n    )\n}\n\nexport function isObjectExistsInfo(obj: any, _argumentName?: string): obj is ObjectExistsInfo {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isObjectRef(obj.objectRef) as boolean &&\n        isObjectType(obj.objectType) as boolean &&\n        isSuiObject(obj.object) as boolean\n    )\n}\n\nexport function isObjectNotExistsInfo(obj: any, _argumentName?: string): obj is ObjectNotExistsInfo {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.objectId) as boolean\n    )\n}\n\nexport function isObjectStatus(obj: any, _argumentName?: string): obj is ObjectStatus {\n    return (\n        (obj === \"Exists\" ||\n            obj === \"NotExists\" ||\n            obj === \"Deleted\")\n    )\n}\n\nexport function isObjectType(obj: any, _argumentName?: string): obj is ObjectType {\n    return (\n        (obj === \"moveObject\" ||\n            obj === \"movePackage\")\n    )\n}\n\nexport function isGetOwnedObjectRefsResponse(obj: any, _argumentName?: string): obj is GetOwnedObjectRefsResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        Array.isArray(obj.objects) &&\n        obj.objects.every((e: any) =>\n            isObjectRef(e) as boolean\n        )\n    )\n}\n\nexport function isGetObjectInfoResponse(obj: any, _argumentName?: string): obj is GetObjectInfoResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isObjectStatus(obj.status) as boolean &&\n        (isObjectRef(obj.details) as boolean ||\n            isObjectExistsInfo(obj.details) as boolean ||\n            isObjectNotExistsInfo(obj.details) as boolean)\n    )\n}\n\nexport function isObjectDigest(obj: any, _argumentName?: string): obj is ObjectDigest {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isObjectId(obj: any, _argumentName?: string): obj is ObjectId {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isSequenceNumber(obj: any, _argumentName?: string): obj is SequenceNumber {\n    return (\n        typeof obj === \"number\"\n    )\n}\n\nexport function isRawObjectRef(obj: any, _argumentName?: string): obj is RawObjectRef {\n    return (\n        Array.isArray(obj) &&\n        isTransactionDigest(obj[0]) as boolean &&\n        isSequenceNumber(obj[1]) as boolean &&\n        isTransactionDigest(obj[2]) as boolean\n    )\n}\n\nexport function isTransfer(obj: any, _argumentName?: string): obj is Transfer {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.recipient) as boolean &&\n        isRawObjectRef(obj.object_ref) as boolean\n    )\n}\n\nexport function isRawAuthoritySignInfo(obj: any, _argumentName?: string): obj is RawAuthoritySignInfo {\n    return (\n        Array.isArray(obj) &&\n        isTransactionDigest(obj[0]) as boolean &&\n        isTransactionDigest(obj[1]) as boolean\n    )\n}\n\nexport function isTransactionKindName(obj: any, _argumentName?: string): obj is TransactionKindName {\n    return (\n        (obj === \"Transfer\" ||\n            obj === \"Publish\" ||\n            obj === \"Call\")\n    )\n}\n\nexport function isSingleTransactionKind(obj: any, _argumentName?: string): obj is SingleTransactionKind {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isTransfer(obj.Transfer) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isMoveModulePublish(obj.Publish) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isMoveCall(obj.Call) as boolean)\n    )\n}\n\nexport function isTransactionKind(obj: any, _argumentName?: string): obj is TransactionKind {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isSingleTransactionKind(obj.Single) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            Array.isArray(obj.Batch) &&\n            obj.Batch.every((e: any) =>\n                isSingleTransactionKind(e) as boolean\n            ))\n    )\n}\n\nexport function isTransactionData(obj: any, _argumentName?: string): obj is TransactionData {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionKind(obj.kind) as boolean &&\n        isTransactionDigest(obj.sender) as boolean &&\n        isRawObjectRef(obj.gas_payment) as boolean &&\n        isSequenceNumber(obj.gas_budget) as boolean\n    )\n}\n\nexport function isEpochId(obj: any, _argumentName?: string): obj is EpochId {\n    return (\n        typeof obj === \"number\"\n    )\n}\n\nexport function isAuthorityQuorumSignInfo(obj: any, _argumentName?: string): obj is AuthorityQuorumSignInfo {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSequenceNumber(obj.epoch) as boolean &&\n        Array.isArray(obj.signatures) &&\n        obj.signatures.every((e: any) =>\n            isRawAuthoritySignInfo(e) as boolean\n        )\n    )\n}\n\nexport function isCertifiedTransaction(obj: any, _argumentName?: string): obj is CertifiedTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionData(obj.data) as boolean &&\n        isTransactionDigest(obj.tx_signature) as boolean &&\n        isAuthorityQuorumSignInfo(obj.auth_sign_info) as boolean\n    )\n}\n\nexport function isGasCostSummary(obj: any, _argumentName?: string): obj is GasCostSummary {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isSequenceNumber(obj.computation_cost) as boolean &&\n        isSequenceNumber(obj.storage_cost) as boolean &&\n        isSequenceNumber(obj.storage_rebate) as boolean\n    )\n}\n\nexport function isExecutionStatusType(obj: any, _argumentName?: string): obj is ExecutionStatusType {\n    return (\n        (obj === \"Success\" ||\n            obj === \"Failure\")\n    )\n}\n\nexport function isExecutionStatus(obj: any, _argumentName?: string): obj is ExecutionStatus {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            isExecutionStatusDetail(obj.Success) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isExecutionStatusDetail(obj.Failure) as boolean)\n    )\n}\n\nexport function isExecutionStatusDetail(obj: any, _argumentName?: string): obj is ExecutionStatusDetail {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isGasCostSummary(obj.gas_cost) as boolean\n    )\n}\n\nexport function isOwnedObjectRef(obj: any, _argumentName?: string): obj is OwnedObjectRef {\n    return (\n        Array.isArray(obj) &&\n        isRawObjectRef(obj[0]) as boolean &&\n        isObjectOwner(obj[1]) as boolean\n    )\n}\n\nexport function isTransactionEffects(obj: any, _argumentName?: string): obj is TransactionEffects {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isExecutionStatus(obj.status) as boolean &&\n        Array.isArray(obj.shared_objects) &&\n        obj.shared_objects.every((e: any) =>\n            isRawObjectRef(e) as boolean\n        ) &&\n        isTransactionDigest(obj.transaction_digest) as boolean &&\n        Array.isArray(obj.created) &&\n        obj.created.every((e: any) =>\n            isOwnedObjectRef(e) as boolean\n        ) &&\n        Array.isArray(obj.mutated) &&\n        obj.mutated.every((e: any) =>\n            isOwnedObjectRef(e) as boolean\n        ) &&\n        Array.isArray(obj.unwrapped) &&\n        obj.unwrapped.every((e: any) =>\n            isOwnedObjectRef(e) as boolean\n        ) &&\n        Array.isArray(obj.deleted) &&\n        obj.deleted.every((e: any) =>\n            isRawObjectRef(e) as boolean\n        ) &&\n        Array.isArray(obj.wrapped) &&\n        obj.wrapped.every((e: any) =>\n            isRawObjectRef(e) as boolean\n        ) &&\n        isOwnedObjectRef(obj.gas_object) as boolean &&\n        Array.isArray(obj.events) &&\n        obj.events.every((e: any) =>\n            isEvent(e) as boolean\n        ) &&\n        Array.isArray(obj.dependencies) &&\n        obj.dependencies.every((e: any) =>\n            isTransactionDigest(e) as boolean\n        )\n    )\n}\n\nexport function isTransactionEffectsResponse(obj: any, _argumentName?: string): obj is TransactionEffectsResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isCertifiedTransaction(obj.certificate) as boolean &&\n        isTransactionEffects(obj.effects) as boolean\n    )\n}\n\nexport function isGatewayTxSeqNumber(obj: any, _argumentName?: string): obj is GatewayTxSeqNumber {\n    return (\n        typeof obj === \"number\"\n    )\n}\n\nexport function isGetTxnDigestsResponse(obj: any, _argumentName?: string): obj is GetTxnDigestsResponse {\n    return (\n        Array.isArray(obj) &&\n        obj.every((e: any) =>\n            Array.isArray(e) &&\n            isSequenceNumber(e[0]) as boolean &&\n            isTransactionDigest(e[1]) as boolean\n        )\n    )\n}\n\nexport function isMoveModulePublish(obj: any, _argumentName?: string): obj is MoveModulePublish {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\")\n    )\n}\n\nexport function isEvent(obj: any, _argumentName?: string): obj is Event {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isStructTag(obj.type_) as boolean &&\n        isTransactionDigest(obj.contents) as boolean\n    )\n}\n\nexport function isStructTag(obj: any, _argumentName?: string): obj is StructTag {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.address) as boolean &&\n        isTransactionDigest(obj.module) as boolean &&\n        isTransactionDigest(obj.name) as boolean &&\n        Array.isArray(obj.type_args) &&\n        obj.type_args.every((e: any) =>\n            isMoveTypeTag(e) as boolean\n        )\n    )\n}\n\nexport function isMoveTypeTag(obj: any, _argumentName?: string): obj is MoveTypeTag {\n    return (\n        (obj === \"bool\" ||\n            obj === \"u8\" ||\n            obj === \"u64\" ||\n            obj === \"u128\" ||\n            obj === \"address\" ||\n            obj === \"signer\" ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            Array.isArray(obj.vector) &&\n            obj.vector.every((e: any) =>\n                isMoveTypeTag(e) as boolean\n            ) ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isStructTag(obj.struct) as boolean)\n    )\n}\n\nexport function isMoveCall(obj: any, _argumentName?: string): obj is MoveCall {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isRawObjectRef(obj.package) as boolean &&\n        isTransactionDigest(obj.module) as boolean &&\n        isTransactionDigest(obj.function) as boolean &&\n        Array.isArray(obj.type_arguments) &&\n        obj.type_arguments.every((e: any) =>\n            isMoveTypeTag(e) as boolean\n        ) &&\n        Array.isArray(obj.arguments) &&\n        obj.arguments.every((e: any) =>\n            isMoveCallArg(e) as boolean\n        )\n    )\n}\n\nexport function isMoveCallArg(obj: any, _argumentName?: string): obj is MoveCallArg {\n    return (\n        ((obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n            Array.isArray(obj.Pure) &&\n            obj.Pure.every((e: any) =>\n                isSequenceNumber(e) as boolean\n            ) ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isRawObjectRef(obj.ImmOrOwnedObject) as boolean ||\n            (obj !== null &&\n                typeof obj === \"object\" ||\n                typeof obj === \"function\") &&\n            isTransactionDigest(obj.SharedObject) as boolean)\n    )\n}\n\nexport function isEmptySignInfo(obj: any, _argumentName?: string): obj is EmptySignInfo {\n    return (\n        typeof obj === \"object\"\n    )\n}\n\nexport function isAuthorityName(obj: any, _argumentName?: string): obj is AuthorityName {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isAuthoritySignature(obj: any, _argumentName?: string): obj is AuthoritySignature {\n    return (\n        typeof obj === \"string\"\n    )\n}\n\nexport function isTransactionBytes(obj: any, _argumentName?: string): obj is TransactionBytes {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.tx_bytes) as boolean\n    )\n}\n\nexport function isTransactionResponse(obj: any, _argumentName?: string): obj is TransactionResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionEffectsResponse(obj.EffectResponse) as boolean\n    )\n}\n\nexport function isSignedTransaction(obj: any, _argumentName?: string): obj is SignedTransaction {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.tx_bytes) as boolean &&\n        isTransactionDigest(obj.signature) as boolean &&\n        isTransactionDigest(obj.pub_key) as boolean\n    )\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * Generated type guards for \"client.ts\".\n * WARNING: Do not manually change this file.\n */\nimport { HttpHeaders, RpcParams, ValidResponse, ErrorResponse } from \"./client\";\nimport { isTransactionDigest } from \"../index.guard\";\n\nexport function isHttpHeaders(obj: any, _argumentName?: string): obj is HttpHeaders {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\")\n    )\n}\n\nexport function isRpcParams(obj: any, _argumentName?: string): obj is RpcParams {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        isTransactionDigest(obj.method) as boolean &&\n        Array.isArray(obj.args)\n    )\n}\n\nexport function isValidResponse(obj: any, _argumentName?: string): obj is ValidResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.jsonrpc === \"2.0\" &&\n        isTransactionDigest(obj.id) as boolean\n    )\n}\n\nexport function isErrorResponse(obj: any, _argumentName?: string): obj is ErrorResponse {\n    return (\n        (obj !== null &&\n            typeof obj === \"object\" ||\n            typeof obj === \"function\") &&\n        obj.jsonrpc === \"2.0\" &&\n        isTransactionDigest(obj.id) as boolean &&\n        (obj.error !== null &&\n            typeof obj.error === \"object\" ||\n            typeof obj.error === \"function\") &&\n        isTransactionDigest(obj.error.message) as boolean\n    )\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport RpcClient from 'jayson/lib/client/browser';\nimport fetch from 'cross-fetch';\nimport { isErrorResponse, isValidResponse } from './client.guard';\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = { [header: string]: string };\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  method: string;\n  args: Array<any>;\n};\n\nexport class JsonRpcClient {\n  private rpcClient: RpcClient;\n\n  constructor(url: string, httpHeaders?: HttpHeaders) {\n    this.rpcClient = this.createRpcClient(url, httpHeaders);\n  }\n\n  private createRpcClient(url: string, httpHeaders?: HttpHeaders): RpcClient {\n    const client = new RpcClient(\n      async (\n        request: any,\n        callback: (arg0: Error | null, arg1?: string | undefined) => void\n      ) => {\n        const options = {\n          method: 'POST',\n          body: request,\n          headers: Object.assign(\n            {\n              'Content-Type': 'application/json',\n            },\n            httpHeaders || {}\n          ),\n        };\n\n        try {\n          let res: Response = await fetch(url, options);\n          const text = await res.text();\n          if (res.ok) {\n            callback(null, text);\n          } else {\n            callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n          }\n        } catch (err) {\n          if (err instanceof Error) callback(err);\n        }\n      },\n      {}\n    );\n\n    return client;\n  }\n\n  async requestWithType<T>(\n    method: string,\n    args: Array<any>,\n    isT: (val: any) => val is T\n  ): Promise<T> {\n    const response = await this.request(method, args);\n    if (isErrorResponse(response)) {\n      throw new Error(`RPC Error: ${response.error.message}`);\n    } else if (isValidResponse(response)) {\n      if (isT(response.result)) return response.result;\n      else\n        throw new Error(\n          `RPC Error: result not of expected type. Result received was: ${JSON.stringify(\n            response.result\n          )}`\n        );\n    }\n    throw new Error(`Unexpected RPC Response: ${response}`);\n  }\n\n  async request(method: string, args: Array<any>): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.rpcClient.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  }\n\n  async batchRequestWithType<T>(\n    requests: RpcParams[],\n    isT: (val: any) => val is T\n  ): Promise<T[]> {\n    const responses = await this.batchRequest(requests);\n    // TODO: supports other error modes such as throw or return\n    const validResponses = responses.filter(\n      (response: any) => isValidResponse(response) && isT(response.result)\n    );\n\n    return validResponses.map((response: ValidResponse) => response.result);\n  }\n\n  async batchRequest(requests: RpcParams[]): Promise<any> {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map(params => {\n        return this.rpcClient.request(params.method, params.args);\n      });\n\n      this.rpcClient.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  }\n}\n\nexport type ValidResponse = {\n  jsonrpc: '2.0';\n  id: string;\n  result: any;\n};\n\nexport type ErrorResponse = {\n  jsonrpc: '2.0';\n  id: string;\n  error: {\n    code: any;\n    message: string;\n    data?: any;\n  };\n};\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ObjectOwner } from './common';\nimport { TransactionDigest } from './common';\n\nexport type ObjectRef = {\n  digest: TransactionDigest;\n  objectId: string;\n  version: number;\n};\n\nexport type ObjectContentField =\n  | ObjectContent\n  | string\n  | boolean\n  | number\n  | number[]\n  | ObjectContent[];\n\nexport type ObjectContentFields = Record<string, ObjectContentField>;\n\nexport type ObjectContent = {\n  fields: ObjectContentFields;\n  type: string;\n};\n\nexport type MovePackageContent = Record<string, string>;\n\nexport type SuiObject = {\n  contents: ObjectContent | MovePackageContent;\n  owner: ObjectOwner;\n  tx_digest: TransactionDigest;\n};\n\nexport type ObjectExistsInfo = {\n  objectRef: ObjectRef;\n  objectType: ObjectType;\n  object: SuiObject;\n};\n\nexport type ObjectNotExistsInfo = {\n  objectId: ObjectId;\n};\n\nexport type ObjectStatus = 'Exists' | 'NotExists' | 'Deleted';\nexport type ObjectType = 'moveObject' | 'movePackage';\n\nexport type GetOwnedObjectRefsResponse = {\n  objects: ObjectRef[];\n};\n\nexport type GetObjectInfoResponse = {\n  status: ObjectStatus;\n  details: ObjectExistsInfo | ObjectNotExistsInfo | ObjectRef;\n};\n\nexport type ObjectDigest = string;\nexport type ObjectId = string;\nexport type SequenceNumber = number;\n\n// TODO: get rid of this by implementing some conversion logic from ObjectRef\nexport type RawObjectRef = [ObjectId, SequenceNumber, ObjectDigest];\n\n/* ---------------------------- Helper functions ---------------------------- */\n\nexport function getObjectExistsResponse(\n  resp: GetObjectInfoResponse\n): ObjectExistsInfo | undefined {\n  return resp.status !== 'Exists'\n    ? undefined\n    : (resp.details as ObjectExistsInfo);\n}\n\nexport function getObjectType(\n  resp: GetObjectInfoResponse\n): 'moveObject' | 'movePackage' | undefined {\n  return getObjectExistsResponse(resp)?.objectType;\n}\n\nexport function getObjectContent(\n  resp: GetObjectInfoResponse\n): ObjectContent | undefined {\n  const existsInfo = getObjectExistsResponse(resp);\n  if (existsInfo == null) {\n    return undefined;\n  }\n  const { object, objectType } = existsInfo;\n  return objectType === 'moveObject'\n    ? (object.contents as ObjectContent)\n    : undefined;\n}\n\nexport function getMovePackageContent(\n  resp: GetObjectInfoResponse\n): MovePackageContent | undefined {\n  const existsInfo = getObjectExistsResponse(resp);\n  if (existsInfo == null) {\n    return undefined;\n  }\n  const { object, objectType } = existsInfo;\n  return objectType === 'movePackage'\n    ? (object.contents as MovePackageContent)\n    : undefined;\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isObjectContent } from '../../index.guard';\nimport {\n  getObjectContent,\n  GetObjectInfoResponse,\n  ObjectContent,\n  ObjectContentField,\n  ObjectContentFields,\n  ObjectExistsInfo,\n} from '../objects';\n\n/**\n * Simplifies the common Move Object Content. This will be implemented\n * in the Gateway server level after DevNet.\n */\nexport function transformGetObjectInfoResponse(resp: GetObjectInfoResponse) {\n  const content = getObjectContent(resp);\n  if (content != null) {\n    (resp.details as ObjectExistsInfo).object.contents = transformObjectContent(\n      content\n    );\n  }\n  return resp;\n}\n\nexport function transformObjectContent(input: ObjectContent): ObjectContent {\n  let fields: ObjectContentFields = {};\n  Object.entries<any>(input.fields).forEach(([key, value]) => {\n    if (!isObjectContent(value)) {\n      fields[key] = value;\n      return;\n    }\n    const parsers: typeof MoveObjectContentTransformer[] = [\n      BalanceTransformer,\n      StringTransformer,\n      UniqueIDTransformer,\n    ];\n    let isTransformed = false;\n    for (let p of parsers) {\n      if (p.canTransform(value)) {\n        fields[key] = p.toFieldValue(value);\n        isTransformed = true;\n        break;\n      }\n    }\n    if (!isTransformed) {\n      fields[key] = transformObjectContent(value);\n    }\n  });\n  return {\n    fields,\n    type: input.type,\n  };\n}\n\nabstract class MoveObjectContentTransformer {\n  static toFieldValue(_input: ObjectContent): ObjectContentField {\n    throw new Error('Children classes must override');\n  }\n\n  static canTransform(_input: ObjectContent): boolean {\n    throw new Error('Children classes must override');\n  }\n}\n\nclass StringTransformer extends MoveObjectContentTransformer {\n  static toFieldValue(input: ObjectContent): ObjectContentField {\n    const bytes = input.fields['bytes'] as number[];\n    switch (input.type) {\n      case '0x1::ASCII::String':\n        return bytes.map(n => String.fromCharCode(n)).join('');\n      case '0x2::UTF8::String':\n        return stringFromUTF8Array(new Uint8Array(bytes))!;\n    }\n    return input;\n  }\n\n  static canTransform(input: ObjectContent): boolean {\n    return (\n      input.type === '0x2::UTF8::String' || input.type === '0x1::ASCII::String'\n    );\n  }\n}\n\nclass UniqueIDTransformer extends MoveObjectContentTransformer {\n  static toFieldValue(input: ObjectContent): ObjectContentField {\n    if (UniqueIDTransformer.canTransform(input)) {\n      return (input.fields['id'] as ObjectContent).fields['bytes'];\n    }\n    return input;\n  }\n\n  static canTransform(input: ObjectContent): boolean {\n    return (\n      input.type === '0x2::ID::UniqueID' &&\n      isObjectContent(input.fields['id']) &&\n      input.fields['id'].type === '0x2::ID::ID'\n    );\n  }\n}\n\nclass BalanceTransformer extends MoveObjectContentTransformer {\n  static toFieldValue(input: ObjectContent): ObjectContentField {\n    if (BalanceTransformer.canTransform(input)) {\n      return input.fields['value'] as number;\n    }\n    return input;\n  }\n\n  static canTransform(input: ObjectContent): boolean {\n    return input.type.startsWith('0x2::Balance::Balance');\n  }\n}\n\n// from https://weblog.rogueamoeba.com/2017/02/27/javascript-correctly-converting-a-byte-array-to-a-utf-8-string/\nfunction stringFromUTF8Array(data: Uint8Array): string | null {\n  const extraByteMap = [1, 1, 1, 1, 2, 2, 3, 0];\n  var count = data.length;\n  var str = '';\n\n  for (var index = 0; index < count; ) {\n    var ch = data[index++];\n    if (ch & 0x80) {\n      var extra = extraByteMap[(ch >> 3) & 0x07];\n      if (!(ch & 0x40) || !extra || index + extra > count) return null;\n\n      ch = ch & (0x3f >> extra);\n      for (; extra > 0; extra -= 1) {\n        var chx = data[index++];\n        if ((chx & 0xc0) != 0x80) return null;\n\n        ch = (ch << 6) | (chx & 0x3f);\n      }\n    }\n\n    str += String.fromCharCode(ch);\n  }\n\n  return str;\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Provider } from './provider';\nimport { JsonRpcClient } from '../rpc/client';\nimport {\n  isGetObjectInfoResponse,\n  isGetOwnedObjectRefsResponse,\n  isGetTxnDigestsResponse,\n  isTransactionEffectsResponse,\n  isTransactionResponse,\n} from '../index.guard';\nimport {\n  CertifiedTransaction,\n  GatewayTxSeqNumber,\n  GetTxnDigestsResponse,\n  GetObjectInfoResponse,\n  ObjectRef,\n  TransactionDigest,\n  TransactionEffectsResponse,\n  SignedTransaction,\n  TransactionResponse,\n} from '../types';\nimport { transformGetObjectInfoResponse } from '../types/framework/transformer';\n\nconst isNumber = (val: any): val is number => typeof val === 'number';\n\nexport class JsonRpcProvider extends Provider {\n  private client: JsonRpcClient;\n\n  /**\n   * Establish a connection to a Sui Gateway endpoint\n   *\n   * @param endpoint URL to the Sui Gateway endpoint\n   */\n  constructor(public endpoint: string) {\n    super();\n    this.client = new JsonRpcClient(endpoint);\n  }\n\n  // Objects\n  async getOwnedObjectRefs(address: string): Promise<ObjectRef[]> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getOwnedObjects',\n        [address],\n        isGetOwnedObjectRefsResponse\n      );\n      return resp.objects;\n    } catch (err) {\n      throw new Error(\n        `Error fetching owned object refs: ${err} for address ${address}`\n      );\n    }\n  }\n\n  async getObjectInfo(objectId: string): Promise<GetObjectInfoResponse> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getObjectTypedInfo',\n        [objectId],\n        isGetObjectInfoResponse\n      );\n      return transformGetObjectInfoResponse(resp);\n    } catch (err) {\n      throw new Error(`Error fetching object info: ${err} for id ${objectId}`);\n    }\n  }\n\n  async getObjectInfoBatch(\n    objectIds: string[]\n  ): Promise<GetObjectInfoResponse[]> {\n    const requests = objectIds.map(id => ({\n      method: 'sui_getObjectTypedInfo',\n      args: [id],\n    }));\n    try {\n      const responses = await this.client.batchRequestWithType(\n        requests,\n        isGetObjectInfoResponse\n      );\n      return responses.map(r => transformGetObjectInfoResponse(r));\n    } catch (err) {\n      throw new Error(`Error fetching object info: ${err} for id ${objectIds}`);\n    }\n  }\n\n  // Transactions\n  async getTransactionWithEffects(\n    digest: TransactionDigest\n  ): Promise<TransactionEffectsResponse> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getTransaction',\n        [digest],\n        isTransactionEffectsResponse\n      );\n      return resp;\n    } catch (err) {\n      throw new Error(\n        `Error getting transaction with effects: ${err} for digest ${digest}`\n      );\n    }\n  }\n\n  async getTransactionWithEffectsBatch(\n    digests: TransactionDigest[]\n  ): Promise<TransactionEffectsResponse[]> {\n    const requests = digests.map(d => ({\n      method: 'sui_getTransaction',\n      args: [d],\n    }));\n    try {\n      return await this.client.batchRequestWithType(\n        requests,\n        isTransactionEffectsResponse\n      );\n    } catch (err) {\n      const list = digests.join(', ').substring(0, -2);\n      throw new Error(\n        `Error getting transaction effects: ${err} for digests [${list}]`\n      );\n    }\n  }\n\n  async getTransaction(\n    digest: TransactionDigest\n  ): Promise<CertifiedTransaction> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getTransaction',\n        [digest],\n        isTransactionEffectsResponse\n      );\n      return resp.certificate;\n    } catch (err) {\n      throw new Error(`Error getting transaction: ${err} for digest ${digest}`);\n    }\n  }\n\n  async executeTransaction(\n    txn: SignedTransaction\n  ): Promise<TransactionResponse> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_executeTransaction',\n        [txn],\n        isTransactionResponse\n      );\n      return resp;\n    } catch (err) {\n      throw new Error(\n        `Error executing transaction: ${err} for txn ${JSON.stringify(txn)}`\n      );\n    }\n  }\n\n  async getTotalTransactionNumber(): Promise<number> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_getTotalTransactionNumber',\n        [],\n        isNumber\n      );\n      return resp;\n    } catch (err) {\n      throw new Error(`Error fetching total transaction number: ${err}`);\n    }\n  }\n\n  async getTransactionDigestsInRange(\n    start: GatewayTxSeqNumber,\n    end: GatewayTxSeqNumber\n  ): Promise<GetTxnDigestsResponse> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getTransactionsInRange',\n        [start, end],\n        isGetTxnDigestsResponse\n      );\n    } catch (err) {\n      throw new Error(\n        `Error fetching transaction digests in range: ${err} for range ${start}-${end}`\n      );\n    }\n  }\n\n  async getRecentTransactions(count: number): Promise<GetTxnDigestsResponse> {\n    try {\n      return await this.client.requestWithType(\n        'sui_getRecentTransactions',\n        [count],\n        isGetTxnDigestsResponse\n      );\n    } catch (err) {\n      throw new Error(\n        `Error fetching recent transactions: ${err} for count ${count}`\n      );\n    }\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Buffer } from 'buffer';\n\nexport class HexDataBuffer {\n  private _data: Uint8Array;\n\n  constructor(data: Uint8Array | string) {\n    if (typeof data === 'string') {\n      this._data = new Uint8Array(Buffer.from(data, 'hex'));\n    } else {\n      this._data = data;\n    }\n  }\n\n  getData(): Uint8Array {\n    return this._data;\n  }\n\n  getLength(): number {\n    return this._data.length;\n  }\n\n  toString(): string {\n    return Buffer.from(this._data).toString('hex');\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { isTransactionBytes } from '../../index.guard';\nimport { JsonRpcClient } from '../../rpc/client';\nimport { Base64DataBuffer } from '../../serialization/base64';\nimport {\n  TransferCoinTransaction,\n  TxnDataSerializer,\n} from './txn-data-serializer';\n\n/**\n * This is a temporary implementation of the `TxnDataSerializer` class\n * that uses the Sui Gateway RPC API to serialize a transaction into BCS bytes.\n * This class will be deprecated once we support BCS serialization in TypeScript.\n * It is not safe to use this class in production because one cannot authenticate\n * the encoding.\n */\nexport class RpcTxnDataSerializer implements TxnDataSerializer {\n  private client: JsonRpcClient;\n\n  /**\n   * Establish a connection to a Sui Gateway endpoint\n   *\n   * @param endpoint URL to the Sui Gateway endpoint\n   */\n  constructor(endpoint: string) {\n    this.client = new JsonRpcClient(endpoint);\n  }\n\n  async newTransferCoin(t: TransferCoinTransaction): Promise<Base64DataBuffer> {\n    try {\n      const resp = await this.client.requestWithType(\n        'sui_transferCoin',\n        [t.signer, t.objectId, t.gasPayment, t.gasBudget, t.recipient],\n        isTransactionBytes\n      );\n      return new Base64DataBuffer(resp.tx_bytes);\n    } catch (err) {\n      throw new Error(`Error transferring coin: ${err}`);\n    }\n  }\n\n  // TODO: add more interface methods\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  CertifiedTransaction,\n  TransactionDigest,\n  GetTxnDigestsResponse,\n  GatewayTxSeqNumber,\n  ObjectRef,\n  GetObjectInfoResponse,\n  SignedTransaction,\n  TransactionResponse,\n} from '../types';\nimport { Provider } from './provider';\n\nexport class VoidProvider extends Provider {\n  // Objects\n  async getOwnedObjectRefs(_address: string): Promise<ObjectRef[]> {\n    throw this.newError('getOwnedObjectRefs');\n  }\n\n  async getObjectInfo(_objectId: string): Promise<GetObjectInfoResponse> {\n    throw this.newError('getObjectInfo');\n  }\n\n  // Transactions\n  async getTransaction(\n    _digest: TransactionDigest\n  ): Promise<CertifiedTransaction> {\n    throw this.newError('getTransaction');\n  }\n\n  async executeTransaction(\n    _txn: SignedTransaction\n  ): Promise<TransactionResponse> {\n    throw this.newError('executeTransaction');\n  }\n\n  async getTotalTransactionNumber(): Promise<number> {\n    throw this.newError('getTotalTransactionNumber');\n  }\n\n  async getTransactionDigestsInRange(\n    _start: GatewayTxSeqNumber,\n    _end: GatewayTxSeqNumber\n  ): Promise<GetTxnDigestsResponse> {\n    throw this.newError('getTransactionDigestsInRange');\n  }\n\n  async getRecentTransactions(_count: number): Promise<GetTxnDigestsResponse> {\n    throw this.newError('getRecentTransactions');\n  }\n\n  private newError(operation: string): Error {\n    return new Error(`Please use a valid provider for ${operation}`);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { JsonRpcProvider } from '../providers/json-rpc-provider';\nimport { Provider } from '../providers/provider';\nimport { VoidProvider } from '../providers/void-provider';\nimport { Base64DataBuffer } from '../serialization/base64';\nimport { TransactionResponse } from '../types';\nimport { SignaturePubkeyPair, Signer } from './signer';\nimport { RpcTxnDataSerializer } from './txn-data-serializers/rpc-txn-data-serializer';\nimport {\n  TransferCoinTransaction,\n  TxnDataSerializer,\n} from './txn-data-serializers/txn-data-serializer';\n\n///////////////////////////////\n// Exported Abstracts\nexport abstract class SignerWithProvider implements Signer {\n  readonly provider: Provider;\n  readonly serializer: TxnDataSerializer;\n\n  ///////////////////\n  // Sub-classes MUST implement these\n\n  // Returns the checksum address\n  abstract getAddress(): Promise<string>;\n\n  /**\n   * Returns the signature for the data and the public key of the signer\n   */\n  abstract signData(data: Base64DataBuffer): Promise<SignaturePubkeyPair>;\n\n  // Returns a new instance of the Signer, connected to provider.\n  // This MAY throw if changing providers is not supported.\n  abstract connect(provider: Provider): SignerWithProvider;\n\n  ///////////////////\n  // Sub-classes MAY override these\n\n  constructor(provider?: Provider, serializer?: TxnDataSerializer) {\n    this.provider = provider || new VoidProvider();\n    let endpoint = '';\n    if (this.provider instanceof JsonRpcProvider) {\n      endpoint = this.provider.endpoint;\n    }\n    this.serializer = serializer || new RpcTxnDataSerializer(endpoint);\n  }\n\n  /**\n   * Sign a transaction and submit to the Gateway for execution\n   *\n   * @param txBytes BCS serialised TransactionData bytes\n   */\n  async signAndExecuteTransaction(\n    txBytes: Base64DataBuffer\n  ): Promise<TransactionResponse> {\n    const sig = await this.signData(txBytes);\n    return await this.provider.executeTransaction({\n      tx_bytes: txBytes.toString(),\n      signature: sig.signature.toString(),\n      pub_key: sig.pubKey.toString(),\n    });\n  }\n\n  /**\n   * Serialize and Sign a `TransferCoin` transaction and submit to the Gateway for execution\n   */\n  async transferCoin(\n    transaction: TransferCoinTransaction\n  ): Promise<TransactionResponse> {\n    const txBytes = await this.serializer.newTransferCoin(transaction);\n    return await this.signAndExecuteTransaction(txBytes);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { Ed25519Keypair } from '../cryptography/ed25519-keypair';\nimport { Provider } from '../providers/provider';\nimport { Base64DataBuffer } from '../serialization/base64';\nimport { SignaturePubkeyPair } from './signer';\nimport { SignerWithProvider } from './signer-with-provider';\nimport { TxnDataSerializer } from './txn-data-serializers/txn-data-serializer';\n\nexport class RawSigner extends SignerWithProvider {\n  private readonly keypair: Ed25519Keypair;\n\n  constructor(\n    keypair: Ed25519Keypair,\n    provider?: Provider,\n    serializer?: TxnDataSerializer\n  ) {\n    super(provider, serializer);\n    this.keypair = keypair;\n  }\n\n  async getAddress(): Promise<string> {\n    throw this.keypair.getPublicKey().toSuiAddress();\n  }\n\n  async signData(data: Base64DataBuffer): Promise<SignaturePubkeyPair> {\n    return {\n      signature: this.keypair.signData(data),\n      pubKey: this.keypair.getPublicKey(),\n    };\n  }\n\n  connect(provider: Provider): SignerWithProvider {\n    return new RawSigner(this.keypair, provider);\n  }\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { ObjectOwner, SuiAddress, TransactionDigest } from './common';\nimport { ObjectId, RawObjectRef } from './objects';\n\nexport type Transfer = {\n  recipient: string;\n  object_ref: RawObjectRef;\n};\nexport type RawAuthoritySignInfo = [AuthorityName, AuthoritySignature];\n\nexport type TransactionKindName = 'Transfer' | 'Publish' | 'Call';\nexport type SingleTransactionKind =\n  | { Transfer: Transfer }\n  | { Publish: MoveModulePublish }\n  | { Call: MoveCall };\nexport type TransactionKind =\n  | { Single: SingleTransactionKind }\n  | { Batch: SingleTransactionKind[] };\nexport type TransactionData = {\n  kind: TransactionKind;\n  sender: string;\n  gas_payment: RawObjectRef;\n  gas_budget: number;\n};\n\n// TODO: support u64\nexport type EpochId = number;\n\nexport type AuthorityQuorumSignInfo = {\n  epoch: EpochId;\n  signatures: RawAuthoritySignInfo[];\n};\n\nexport type CertifiedTransaction = {\n  data: TransactionData;\n  tx_signature: string;\n  auth_sign_info: AuthorityQuorumSignInfo;\n};\n\nexport type GasCostSummary = {\n  computation_cost: number;\n  storage_cost: number;\n  storage_rebate: number;\n};\n\nexport type ExecutionStatusType = 'Success' | 'Failure';\nexport type ExecutionStatus =\n  | { Success: ExecutionStatusDetail }\n  | { Failure: ExecutionStatusDetail };\n\nexport type ExecutionStatusDetail = { gas_cost: GasCostSummary; error?: any };\n\n// TODO: change the tuple to struct from the server end\nexport type OwnedObjectRef = [RawObjectRef, ObjectOwner];\n\nexport type TransactionEffects = {\n  status: ExecutionStatus;\n  shared_objects: RawObjectRef[];\n  transaction_digest: TransactionDigest;\n  created: OwnedObjectRef[];\n  mutated: OwnedObjectRef[];\n  unwrapped: OwnedObjectRef[];\n  deleted: RawObjectRef[];\n  wrapped: RawObjectRef[];\n  gas_object: OwnedObjectRef;\n  events: Event[];\n  dependencies: TransactionDigest[];\n};\n\nexport type TransactionEffectsResponse = {\n  certificate: CertifiedTransaction;\n  effects: TransactionEffects;\n};\n\nexport type GatewayTxSeqNumber = number;\n\nexport type GetTxnDigestsResponse = [GatewayTxSeqNumber, TransactionDigest][];\n\nexport type MoveModulePublish = {\n  modules: any;\n};\n\nexport type Event = {\n  type_: StructTag;\n  contents: string;\n};\n\nexport type StructTag = {\n  address: SuiAddress;\n  module: string;\n  name: string;\n  type_args: MoveTypeTag[];\n};\nexport type MoveTypeTag =\n  | 'bool'\n  | 'u8'\n  | 'u64'\n  | 'u128'\n  | 'address'\n  | 'signer'\n  | { vector: MoveTypeTag[] }\n  | { struct: StructTag };\n\nexport type MoveCall = {\n  package: RawObjectRef;\n  module: string;\n  function: string;\n  type_arguments: MoveTypeTag[];\n  arguments: MoveCallArg[];\n};\n\nexport type MoveCallArg =\n  // TODO: convert to Uint8Array\n  | { Pure: number[] }\n  | { ImmOrOwnedObject: RawObjectRef }\n  | { SharedObject: ObjectId };\n\nexport type EmptySignInfo = object;\nexport type AuthorityName = string;\nexport type AuthoritySignature = string;\n\nexport type TransactionBytes = {\n  tx_bytes: string;\n};\n\nexport type TransactionResponse = {\n  EffectResponse: TransactionEffectsResponse;\n  // TODO: Add Publish, MergeCoin, SplitCoin Response\n};\n\nexport type SignedTransaction = {\n  tx_bytes: string;\n  signature: string;\n  pub_key: string;\n};\n\n/* ---------------------------- Helper functions ---------------------------- */\n\nexport function getSingleTransactionKind(\n  data: TransactionData\n): SingleTransactionKind | undefined {\n  return 'Single' in data.kind ? data.kind.Single : undefined;\n}\n\nexport function getTransferTransaction(\n  data: TransactionData\n): Transfer | undefined {\n  const tx = getSingleTransactionKind(data);\n  return tx && 'Transfer' in tx ? tx.Transfer : undefined;\n}\n\nexport function getPublishTransaction(\n  data: TransactionData\n): MoveModulePublish | undefined {\n  const tx = getSingleTransactionKind(data);\n  return tx && 'Publish' in tx ? tx.Publish : undefined;\n}\n\nexport function getMoveCallTransaction(\n  data: TransactionData\n): MoveCall | undefined {\n  const tx = getSingleTransactionKind(data);\n  return tx && 'Call' in tx ? tx.Call : undefined;\n}\n\nexport function getTransactionKind(\n  data: TransactionData\n): TransactionKindName | undefined {\n  const tx = getSingleTransactionKind(data);\n  return tx && (Object.keys(tx)[0] as TransactionKindName);\n}\n\nexport function getExecutionStatusType(\n  data: ExecutionStatus\n): ExecutionStatusType {\n  return Object.keys(data)[0] as ExecutionStatusType;\n}\n\nexport function getGasSummary(\n  data: ExecutionStatus\n): GasCostSummary | undefined {\n  const details = getExecutionDetails(data);\n  return details.gas_cost;\n}\n\nexport function getTotalGasUsed(data: ExecutionStatus): number {\n  const gasSummary = getGasSummary(data);\n  if (gasSummary) {\n    return (\n      gasSummary.computation_cost +\n      gasSummary.storage_cost -\n      gasSummary.storage_rebate\n    );\n  }\n  return 0;\n}\n\nexport function getExecutionDetails(\n  data: ExecutionStatus\n): ExecutionStatusDetail {\n  if ('Success' in data) {\n    return data.Success;\n  } else if ('Failure' in data) {\n    return data.Failure;\n  }\n  console.error('Unrecognized ExecutionStatus:', data);\n  return data[Object.keys(data)[0]];\n}\n","// Copyright (c) 2022, Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * BCS implementation {@see https://github.com/diem/bcs } for JavaScript.\n * Intended to be used for Move applications; supports both NodeJS and browser.\n *\n * For more details and examples {@see README.md }.\n *\n * @module bcs\n * @property {BcsReader}\n */\n\nimport * as BN from 'bn.js';\nimport { HexDataBuffer as HEX } from '../serialization/hex';\nimport { Base64DataBuffer as B64 } from '../serialization/base64';\n\n/**\n * Class used for reading BCS data chunk by chunk. Meant to be used\n * by some wrapper, which will make sure that data is valid and is\n * matching the desired format.\n *\n * @example\n * // data for this example is:\n * // { a: u8, b: u32, c: bool, d: u64 }\n *\n * let reader = new BcsReader(\"647f1a060001ffffe7890423c78a050102030405\");\n * let field1 = reader.read8();\n * let field2 = reader.read32();\n * let field3 = reader.read8() == '1'; // bool\n * let field4 = reader.read64();\n * // ....\n *\n * Reading vectors is another deal in BCS. To read a vector, you first need to read\n * its length using {@link readULEB}. Here's an example:\n * @example\n * // data encoded: { field: [1, 2, 3, 4, 5] }\n * let reader = new BcsReader(\"050102030405\");\n * let vec_length = reader.readULEB();\n * let elements = [];\n * for (let i = 0; i < vec_length; i++) {\n *   elements.push(reader.read8());\n * }\n * console.log(elements); // [1,2,3,4,5]\n *\n * @param {String} data HEX-encoded data (serialized BCS)\n */\nexport class BcsReader {\n  private dataView: DataView;\n  private bytePosition: number = 0;\n\n  /**\n   * @param {Uint8Array} data Data to use as a buffer.\n   */\n  constructor(data: Uint8Array) {\n    this.dataView = new DataView(data.buffer);\n  }\n  /**\n   * Shift current cursor position by `bytes`.\n   *\n   * @param {Number} bytes Number of bytes to\n   * @returns {this} Self for possible chaining.\n   */\n  shift(bytes: number) {\n    this.bytePosition += bytes;\n    return this;\n  }\n  /**\n   * Read U8 value from the buffer and shift cursor by 1.\n   * @returns\n   */\n  read8(): BN {\n    let value = this.dataView.getUint8(this.bytePosition);\n    this.shift(1);\n    return new BN.BN(value, 10);\n  }\n  /**\n   * Read U16 value from the buffer and shift cursor by 2.\n   * @returns\n   */\n  read16(): BN {\n    let value = this.dataView.getUint16(this.bytePosition, true);\n    this.shift(2);\n    return new BN.BN(value, 10);\n  }\n  /**\n   * Read U32 value from the buffer and shift cursor by 4.\n   * @returns\n   */\n  read32(): BN {\n    let value = this.dataView.getUint32(this.bytePosition, true);\n    this.shift(4);\n    return new BN.BN(value, 10);\n  }\n  /**\n   * Read U64 value from the buffer and shift cursor by 8.\n   * @returns\n   */\n  read64(): BN {\n    let value1 = this.read32();\n    let value2 = this.read32();\n    let result = value2.toString(16) + value1.toString(16).padStart(8, '0');\n\n    return new BN.BN(result, 16);\n  }\n  /**\n   * Read U128 value from the buffer and shift cursor by 16.\n   * @returns\n   */\n  read128(): BN {\n    let value1 = this.read64();\n    let value2 = this.read64();\n    let result = value2.toString(16) + value1.toString(16).padStart(8, '0');\n\n    return new BN.BN(result, 16);\n  }\n  /**\n   * Read `num` number of bytes from the buffer and shift cursor by `num`.\n   * @param num Number of bytes to read.\n   * @returns Selected Buffer.\n   */\n  readBytes(num: number): Uint8Array {\n    let start = this.bytePosition + this.dataView.byteOffset;\n    let value = new Uint8Array(this.dataView.buffer, start, num);\n\n    this.shift(num);\n\n    return value;\n  }\n  /**\n   * Read ULEB value - an integer of varying size. Used for enum indexes and\n   * vector lengths.\n   * @returns {Number} The ULEB value.\n   */\n  readULEB(): number {\n    let start = this.bytePosition + this.dataView.byteOffset;\n    let buffer = new Uint8Array(this.dataView.buffer, start);\n    let { value, length } = ulebDecode(buffer);\n\n    this.shift(length);\n\n    return value;\n  }\n  /**\n   * Read a BCS vector: read a length and then apply function `cb` X times\n   * where X is the length of the vector, defined as ULEB in BCS bytes.\n   * @param cb Callback to process elements of vector.\n   * @returns {Array<Any>} Array of the resulting values, returned by callback.\n   */\n  readVec(cb: (reader: BcsReader, i: number, length: number) => any): any[] {\n    let length = this.readULEB();\n    let result = [];\n    for (let i = 0; i < length; i++) {\n      result.push(cb(this, i, length));\n    }\n    return result;\n  }\n}\n\n/**\n * Class used to write BCS data into a buffer. Initializer requires\n * some size of a buffer to init; default value for this buffer is 1KB.\n *\n * Most methods are chainable, so it is possible to write them in one go.\n *\n * @example\n * let serialized = new BcsWriter()\n *   .write8(10)\n *   .write32(1000000)\n *   .write64(10000001000000)\n *   .hex();\n */\nexport class BcsWriter {\n  private dataView: DataView;\n  private bytePosition: number = 0;\n\n  /**\n   * @param {Number} [size=1024] Size of the buffer to reserve for serialization.\n   */\n  constructor(size = 1024) {\n    this.dataView = new DataView(new ArrayBuffer(size));\n  }\n\n  /**\n   * Unify argument types by converting them to BN.\n   */\n  static toBN(number: number | BN | bigint | string): BN {\n    switch (typeof number) {\n      case 'bigint':\n        return new BN.BN(number.toString());\n      default:\n        return new BN.BN(number);\n    }\n  }\n\n  /**\n   * Shift current cursor position by `bytes`.\n   *\n   * @param {Number} bytes Number of bytes to\n   * @returns {this} Self for possible chaining.\n   */\n  shift(bytes: number): this {\n    this.bytePosition += bytes;\n    return this;\n  }\n  /**\n   * Write a U8 value into a buffer and shift cursor position by 1.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write8(value: number | bigint | BN): this {\n    this.dataView.setUint8(this.bytePosition, +BcsWriter.toBN(value));\n    return this.shift(1);\n  }\n  /**\n   * Write a U16 value into a buffer and shift cursor position by 2.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write16(value: number | bigint | BN): this {\n    this.dataView.setUint16(this.bytePosition, +BcsWriter.toBN(value), true);\n    return this.shift(2);\n  }\n  /**\n   * Write a U32 value into a buffer and shift cursor position by 4.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  write32(value: number | bigint | BN): this {\n    this.dataView.setUint32(this.bytePosition, +BcsWriter.toBN(value), true);\n    return this.shift(4);\n  }\n  /**\n   * Write a U64 value into a buffer and shift cursor position by 8.\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write64(value: bigint | BN): this {\n    BcsWriter.toBN(value)\n      .toArray('le', 8)\n      .forEach(el => this.write8(el));\n\n    return this;\n  }\n  /**\n   * Write a U128 value into a buffer and shift cursor position by 16.\n   *\n   * @unimplemented\n   * @param {bigint} value Value to write.\n   * @returns {this}\n   */\n  write128(value: bigint | BN): this {\n    BcsWriter.toBN(value)\n      .toArray('le', 16)\n      .forEach(el => this.write8(el));\n\n    return this;\n  }\n  /**\n   * Write a ULEB value into a buffer and shift cursor position by number of bytes\n   * written.\n   * @param {Number} value Value to write.\n   * @returns {this}\n   */\n  writeULEB(value: number): this {\n    ulebEncode(value).forEach(el => this.write8(el));\n    return this;\n  }\n  /**\n   * Write a vector into a buffer by first writing the vector length and then calling\n   * a callback on each passed value.\n   *\n   * @param {Array<Any>} vector Array of elements to write.\n   * @param {WriteVecCb} cb Callback to call on each element of the vector.\n   * @returns {this}\n   */\n  writeVec(\n    vector: Array<any>,\n    cb: (writer: BcsWriter, el: any, i: number, len: number) => {}\n  ): this {\n    this.writeULEB(vector.length);\n    Array.from(vector).forEach((el, i) => cb(this, el, i, vector.length));\n    return this;\n  }\n\n  /**\n   * Get underlying buffer taking only value bytes (in case initial buffer size was bigger).\n   * @returns {Uint8Array} Resulting BCS.\n   */\n  toBytes() {\n    return new Uint8Array(this.dataView.buffer.slice(0, this.bytePosition));\n  }\n\n  /**\n   * Represent data as 'hex' or 'base64'\n   * @param encoding Encoding to use: 'base64' or 'hex'\n   */\n  toString(encoding: string): string {\n    switch (encoding) {\n      case 'base64':\n        return new B64(this.toBytes()).toString();\n      case 'hex':\n        return new HEX(this.toBytes()).toString();\n      default:\n        throw new Error(\n          'Unsupported encoding, supported values are: base64, hex'\n        );\n    }\n  }\n}\n\n// Helper utility: write number as an ULEB array.\n// Original code is taken from: https://www.npmjs.com/package/uleb128 (no longer exists)\nfunction ulebEncode(num: number): Array<number> {\n  let arr = [];\n  let len = 0;\n\n  if (num === 0) {\n    return [0];\n  }\n\n  while (num > 0) {\n    arr[len] = num & 0x7f;\n    if ((num >>= 7)) {\n      arr[len] |= 0x80;\n    }\n    len += 1;\n  }\n\n  return arr;\n}\n\n// Helper utility: decode ULEB as an array of numbers.\n// Original code is taken from: https://www.npmjs.com/package/uleb128 (no longer exists)\nfunction ulebDecode(\n  arr: Array<number> | Uint8Array\n): { value: number; length: number } {\n  let total = 0;\n  let shift = 0;\n  let len = 0;\n\n  while (true) {\n    let byte = arr[len];\n    len += 1;\n    total |= (byte & 0x7f) << shift;\n    if ((byte & 0x80) === 0) {\n      break;\n    }\n    shift += 7;\n  }\n\n  return {\n    value: total,\n    length: len,\n  };\n}\n\n/**\n * Set of methods that allows data encoding/decoding as standalone\n * BCS value or a part of a composed structure/vector.\n */\ninterface TypeInterface {\n  encode: (data: any, size: number) => BcsWriter;\n  decode: (data: Uint8Array) => any;\n\n  _encodeRaw: (writer: BcsWriter, data: any) => BcsWriter;\n  _decodeRaw: (reader: BcsReader) => any;\n}\n\n/**\n * BCS implementation for Move types and few additional built-ins.\n */\nexport class BCS {\n  // Prefefined types constants\n  static readonly U8: string = 'u8';\n  static readonly U32: string = 'u32';\n  static readonly U64: string = 'u64';\n  static readonly U128: string = 'u128';\n  static readonly BOOL: string = 'bool';\n  static readonly VECTOR: string = 'vector';\n  static readonly ADDRESS: string = 'address';\n  static readonly STRING: string = 'string';\n\n  private static types: Map<string, TypeInterface> = new Map();\n\n  /**\n   * Serialize data into BCS.\n   *\n   * @example\n   * BCS.registerVectorType('vector<u8>', 'u8');\n   *\n   * let serialized = BCS\n   *   .set('vector<u8>', [1,2,3,4,5,6])\n   *   .toBytes();\n   *\n   * console.assert(BCS.util.toHex(serialized) === '06010203040506');\n   *\n   * @param type Name of the type to serialize (must be registered).\n   * @param data Data to serialize.\n   * @param size Serialization buffer size. Default 1024 = 1KB.\n   * @return A BCS reader instance. Usually you'd want to call `.toBytes()`\n   */\n  public static set(type: string, data: any, size: number = 1024): BcsWriter {\n    return this.getTypeInterface(type).encode(data, size);\n  }\n\n  /**\n   * Deserialize BCS into a JS type.\n   *\n   * @example\n   * // use util to form an Uint8Array buffer\n   * let data = BCS.de(BCS.U32, new Uint8Array([255, 255, 255, 255]));\n   * console.assert(data.toString() == '4294967295');\n   *\n   * @param type Name of the type to deserialize (must be registered).\n   * @param data Data to deserialize.\n   * @return Deserialized data.\n   */\n  public static de(type: string, data: Uint8Array): any {\n    return this.getTypeInterface(type).decode(data);\n  }\n\n  /**\n   * Check whether a TypeInterface has been loaded for the `Type`\n   * @param type Name of the type to check.\n   * @returns\n   */\n  public static hasType(type: string): boolean {\n    return this.types.has(type);\n  }\n\n  /**\n   * Method to register new types for BCS internal representation.\n   * For each registered type 2 callbacks must be specified and one is optional:\n   *\n   * - encodeCb(writer, data) - write a way to serialize data with BcsWriter;\n   * - decodeCb(reader) - write a way to deserialize data with BcsReader;\n   * - validateCb(data) - validate data - either return bool or throw an error\n   *\n   * @example\n   * // our type would be a string that consists only of numbers\n   * BCS.registerType('number_string',\n   *    (writer, data) => writer.writeVec(data, (w, el) => w.write8(el)),\n   *    (reader) => reader.readVec((r) => r.read8()).join(''), // read each value as u8\n   *    (value) => /[0-9]+/.test(value) // test that it has at least one digit\n   * );\n   * console.log(Array.from(BCS.set('number_string', '12345').toBytes()) == [5,1,2,3,4,5]);\n   *\n   * @param name\n   * @param encodeCb Callback to encode a value.\n   * @param decodeCb Callback to decode a value.\n   * @param validateCb Optional validator Callback to check type before serialization.\n   */\n  public static registerType(\n    name: string,\n    encodeCb: (writer: BcsWriter, data: any) => BcsWriter,\n    decodeCb: (reader: BcsReader) => any,\n    validateCb: (data: any) => boolean = () => true\n  ): typeof BCS {\n    this.types.set(name, {\n      encode(data, size = 1024) {\n        return this._encodeRaw(new BcsWriter(size), data);\n      },\n      decode(data) {\n        return this._decodeRaw(new BcsReader(data));\n      },\n\n      // these methods should always be used with caution as they require pre-defined\n      // reader and writer and mainly exist to allow multi-field (de)serialization;\n      _encodeRaw(writer, data) {\n        if (validateCb(data)) {\n          return encodeCb(writer, data);\n        } else {\n          throw new Error(`Validation failed for type ${name}, data: ${data}`);\n        }\n      },\n      _decodeRaw(reader) {\n        return decodeCb(reader);\n      },\n    });\n\n    return this;\n  }\n\n  /**\n   * Register an address type which is a sequence of U8s of specified length.\n   * @example\n   * BCS.registerAddressType('address', 20);\n   * let addr = BCS.de('address', 'ca27601ec5d915dd40d42e36c395d4a156b24026');\n   *\n   * @param name Name of the address type.\n   * @param length Byte length of the address.\n   * @returns\n   */\n  public static registerAddressType(name: string, length: number): typeof BCS {\n    return this.registerType(\n      name,\n      (writer, data) =>\n        new HEX(data)\n          .getData()\n          .reduce((writer, el) => writer.write8(el), writer),\n      reader => new HEX(reader.readBytes(length)).toString()\n    );\n  }\n\n  /**\n   * Register custom vector type inside the BCS.\n   *\n   * @example\n   * BCS.registerVectorType('vector<u8>', 'u8');\n   * let array = BCS.de('vector<u8>', new Uint8Array([6,1,2,3,4,5,6])); // [1,2,3,4,5,6];\n   * let again = BCS.set('vector<u8>', [1,2,3,4,5,6]).toBytes();\n   *\n   * @param name Name of the type to register.\n   * @param elementType Name of the inner type of the vector.\n   * @return Returns self for chaining.\n   */\n  public static registerVectorType(\n    name: string,\n    elementType: string\n  ): typeof BCS {\n    // OMITTING SAFETY CHECK TO ALLOW RECURSIVE DEFINITIONS\n    // if (!BCS.hasType(elementType)) {\n    //     throw new Error(`Type ${elementType} is not registered`);\n    // }\n\n    return this.registerType(\n      name,\n      (writer, data) =>\n        writer.writeVec(data, (writer, el) => {\n          return BCS.getTypeInterface(elementType)._encodeRaw(writer, el);\n        }),\n      reader =>\n        reader.readVec(reader => {\n          return BCS.getTypeInterface(elementType)._decodeRaw(reader);\n        })\n    );\n  }\n\n  /**\n   * Safe method to register a custom Move struct. The first argument is a name of the\n   * struct which is only used on the FrontEnd and has no affect on serialization results,\n   * and the second is a struct description passed as an Object.\n   *\n   * The description object MUST have the same order on all of the platforms (ie in Move\n   * or in Rust).\n   *\n   * @example\n   * // Move / Rust struct\n   * // struct Coin {\n   * //   value: u64,\n   * //   owner: vector<u8>, // name // Vec<u8> in Rust\n   * //   is_locked: bool,\n   * // }\n   *\n   * BCS.registerStructType('Coin', {\n   *   value: BCS.U64,\n   *   owner: BCS.STRING,\n   *   is_locked: BCS.BOOL\n   * });\n   *\n   * // Created in Rust with diem/bcs\n   * // let rust_bcs_str = '80d1b105600000000e4269672057616c6c65742047757900';\n   * let rust_bcs_str = [ // using an Array here as BCS works with Uint8Buffer\n   *  128, 209, 177,   5,  96,  0,  0,\n   *    0,  14,  66, 105, 103, 32, 87,\n   *   97, 108, 108, 101, 116, 32, 71,\n   *  117, 121,   0\n   * ];\n   *\n   * // Let's encode the value as well\n   * let test_set = BCS.set('Coin', {\n   *   owner: 'Big Wallet Guy',\n   *   value: '412412400000',\n   *   is_locked: false,\n   * });\n   *\n   * console.assert(Array.from(test_set.toBytes()) === rust_bcs_str, 'Whoopsie, result mismatch');\n   *\n   * @param name Name of the type to register.\n   * @param fields Fields of the struct. Must be in the correct order.\n   * @return Returns BCS for chaining.\n   */\n  public static registerStructType(\n    name: string,\n    fields: { [key: string]: string }\n  ): typeof BCS {\n    let struct = Object.freeze(fields); // Make sure the order doesn't get changed\n\n    // IMPORTANT: we need to store canonical order of fields for each registered\n    // struct so we maintain it and allow developers to use any field ordering in\n    // their code (and not cause mismatches based on field order).\n    let canonicalOrder = Object.keys(struct);\n\n    // Make sure all the types in the fields description are already known\n    // and that all the field types are strings.\n    // OMITTING this check to allow recursive definitions and dynamic typing.\n    // for (let type of Object.values(struct)) {\n    //         throw new Error(`Type ${type} is not registered`);\n    //     }\n    // }\n\n    return this.registerType(\n      name,\n      (writer, data) => {\n        for (let key of canonicalOrder) {\n          BCS.getTypeInterface(struct[key])._encodeRaw(writer, data[key]);\n        }\n        return writer;\n      },\n      reader => {\n        let result: { [key: string]: any } = {};\n        for (let key of canonicalOrder) {\n          result[key] = BCS.getTypeInterface(struct[key])._decodeRaw(reader);\n        }\n        return result;\n      }\n    );\n  }\n\n  /**\n   * Safe method to register custom enum type where each invariant holds the value of another type.\n   * @example\n   * BCS.registerStructType('Coin', { value: 'u64' });\n   * BCS.registerVectorType('vector<Coin>', 'Coin');\n   * BCS.registerEnumType('MyEnum', {\n   *  single: 'Coin',\n   *  multi: 'vector<Coin>'\n   * });\n   *\n   * let example1 = Buffer.from('AICWmAAAAAAA', 'base64');\n   * let example2 = Buffer.from('AQIBAAAAAAAAAAIAAAAAAAAA', 'base64');\n   *\n   * console.log(\n   *  BCS.de('MyEnum', new Uint8Array(example1)), // { single: { value: 10000000 } }\n   *  BCS.de('MyEnum', new Uint8Array(example2))  // { multi: [ { value: 1 }, { value: 2 } ] }\n   * }\n   *\n   * // and serialization\n   * BCS.set('MyEnum', { single: { value: 10000000 } }).toBytes();\n   * BCS.set('MyEnum', { multi: [ { value: 1 }, { value: 2 } ] });\n   *\n   * @param name\n   * @param variants\n   */\n  public static registerEnumType(\n    name: string,\n    variants: { [key: string]: string | null }\n  ) {\n    let struct = Object.freeze(variants); // Make sure the order doesn't get changed\n\n    // IMPORTANT: enum is an ordered type and we have to preserve ordering in BCS\n    let canonicalOrder = Object.keys(struct);\n\n    return this.registerType(\n      name,\n      (writer, data) => {\n        let key = Object.keys(data)[0];\n        if (key === undefined) {\n          throw new Error(`Unknown invariant of the enum ${name}`);\n        }\n\n        let orderByte = canonicalOrder.indexOf(key);\n        if (orderByte === -1) {\n          throw new Error(\n            `Unknown invariant of the enum ${name}, allowed values: ${canonicalOrder}`\n          );\n        }\n        let invariant = canonicalOrder[orderByte];\n        let invariantType = struct[invariant];\n\n        writer.write8(orderByte); // write order byte\n\n        // Allow empty Enum values!\n        return invariantType !== null\n          ? BCS.getTypeInterface(invariantType)._encodeRaw(writer, data[key])\n          : writer;\n      },\n      reader => {\n        let orderByte = reader.readULEB();\n        let invariant = canonicalOrder[orderByte];\n        let invariantType = struct[invariant];\n\n        if (orderByte === -1) {\n          throw new Error(\n            `Decoding type mismatch, expected enum ${name} invariant index, received ${orderByte}`\n          );\n        }\n\n        return {\n          [invariant]:\n            invariantType !== null\n              ? BCS.getTypeInterface(invariantType)._decodeRaw(reader)\n              : true,\n        };\n      }\n    );\n  }\n\n  static getTypeInterface(type: string): TypeInterface {\n    let typeInterface = BCS.types.get(type);\n    if (typeInterface === undefined) {\n      throw new Error(`Type ${type} is not registered`);\n    }\n    return typeInterface;\n  }\n}\n\n(function registerPrimitives(): void {\n  BCS.registerType(\n    BCS.U8,\n    (writer, data) => writer.write8(data),\n    reader => reader.read8(),\n    u8 => u8 < 256\n  );\n\n  BCS.registerType(\n    BCS.U32,\n    (writer, data) => writer.write32(data),\n    reader => reader.read32(),\n    u32 => u32 < 4294967296\n  );\n\n  BCS.registerType(\n    BCS.U64,\n    (writer, data) => writer.write64(data),\n    reader => reader.read64(),\n    _u64 => true\n  );\n\n  BCS.registerType(\n    BCS.U128,\n    (writer, data) => writer.write128(data),\n    reader => reader.read128(),\n    _u128 => true\n  );\n\n  BCS.registerType(\n    BCS.BOOL,\n    (writer, data) => writer.write8(data),\n    reader => reader.read8().toString(10) == '1',\n    (_bool: boolean) => true\n  );\n\n  BCS.registerType(\n    BCS.STRING,\n    (writer, data) =>\n      writer.writeVec(Array.from(data), (writer, el) =>\n        writer.write8(el.charCodeAt(0))\n      ),\n    reader => {\n      return reader\n        .readVec(reader => reader.read8())\n        .map(el => String.fromCharCode(el))\n        .join('');\n    },\n    (str: string) => /^[\\x00-\\x7F]*$/.test(str)\n  );\n})();\n"],"names":["Base64DataBuffer","data","Uint8Array","Buffer","from","getData","this","getLength","length","toString","PublicKey","value","undefined","_bn","isPublicKeyData","buffer","Error","BN","byteLength","equals","publicKey","eq","toBase64","toBuffer","toBytes","b","toArrayLike","zeroPad","alloc","copy","toSuiAddress","hexHash","sha3_256","toArray","slice","reduce","output","elem","Ed25519Keypair","keypair","nacl","sign","keyPair","generate","fromSecretKey","secretKey","options","skipValidation","signData","TextEncoder","encode","signature","detached","verify","fromSeed","seed","getPublicKey","Provider","runtime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","Context","_invoke","state","method","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","globalThis","Function","_argumentName","isTransactionDigest","isObjectOwner","AddressOwner","ObjectOwner","isObjectRef","digest","objectId","isSequenceNumber","version","isObjectContentField","Array","isArray","every","e","isObjectContent","isObjectContentFields","entries","fields","isMovePackageContent","isSuiObject","contents","owner","tx_digest","isObjectExistsInfo","objectRef","isObjectType","objectType","isObjectNotExistsInfo","isObjectStatus","isGetOwnedObjectRefsResponse","objects","isGetObjectInfoResponse","status","details","isRawObjectRef","isTransfer","recipient","object_ref","isRawAuthoritySignInfo","isSingleTransactionKind","Transfer","isMoveModulePublish","Publish","isMoveCall","Call","isTransactionKind","Single","Batch","isTransactionData","kind","sender","gas_payment","gas_budget","isAuthorityQuorumSignInfo","epoch","signatures","isCertifiedTransaction","tx_signature","auth_sign_info","isGasCostSummary","computation_cost","storage_cost","storage_rebate","isExecutionStatus","isExecutionStatusDetail","Success","Failure","gas_cost","isOwnedObjectRef","isTransactionEffects","shared_objects","transaction_digest","created","mutated","deleted","wrapped","gas_object","events","isEvent","dependencies","isTransactionEffectsResponse","certificate","effects","isGetTxnDigestsResponse","isStructTag","type_","address","type_args","isMoveTypeTag","vector","struct","type_arguments","arguments","isMoveCallArg","Pure","ImmOrOwnedObject","SharedObject","isTransactionBytes","tx_bytes","isTransactionResponse","EffectResponse","isValidResponse","jsonrpc","id","JsonRpcClient","url","httpHeaders","rpcClient","createRpcClient","RpcClient","request","callback","body","headers","assign","fetch","res","text","ok","statusText","_context","requestWithType","args","isT","response","message","JSON","stringify","_this","batchRequestWithType","requests","batchRequest","validResponses","filter","map","batch","params","_this2","getObjectExistsResponse","resp","getObjectContent","existsInfo","transformGetObjectInfoResponse","content","transformObjectContent","input","isTransformed","BalanceTransformer","StringTransformer","UniqueIDTransformer","p","canTransform","toFieldValue","MoveObjectContentTransformer","_input","bytes","n","String","fromCharCode","join","extraByteMap","count","str","index","ch","extra","chx","stringFromUTF8Array","startsWith","isNumber","val","JsonRpcProvider","endpoint","client","getOwnedObjectRefs","getObjectInfo","getObjectInfoBatch","objectIds","r","getTransactionWithEffects","getTransactionWithEffectsBatch","digests","d","list","substring","getTransaction","executeTransaction","txn","getTotalTransactionNumber","getTransactionDigestsInRange","start","end","getRecentTransactions","HexDataBuffer","_data","RpcTxnDataSerializer","newTransferCoin","t","signer","gasPayment","gasBudget","VoidProvider","_address","newError","_objectId","_digest","_txn","_start","_end","_count","operation","SignerWithProvider","provider","serializer","signAndExecuteTransaction","txBytes","sig","pub_key","pubKey","transferCoin","transaction","RawSigner","getAddress","connect","getSingleTransactionKind","getGasSummary","getExecutionDetails","console","BcsReader","dataView","DataView","shift","bytePosition","read8","getUint8","read16","getUint16","read32","getUint32","read64","value1","padStart","read128","readBytes","num","byteOffset","readULEB","arr","total","len","byte","ulebDecode","readVec","cb","BcsWriter","size","ArrayBuffer","toBN","number","write8","setUint8","write16","setUint16","write32","setUint32","write64","el","write128","writeULEB","ulebEncode","_this3","writeVec","_this4","encoding","B64","HEX","BCS","set","getTypeInterface","de","decode","hasType","types","has","registerType","encodeCb","decodeCb","validateCb","_encodeRaw","_decodeRaw","writer","reader","registerAddressType","registerVectorType","elementType","registerStructType","freeze","canonicalOrder","registerEnumType","variants","orderByte","indexOf","invariantType","invariant","typeInterface","get","Map","U8","u8","U32","u32","U64","_u64","U128","_u128","BOOL","_bool","STRING","charCodeAt","test","tx","_getObjectExistsRespo","gasSummary"],"mappings":"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"}