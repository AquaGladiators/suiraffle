import { ObjectOwner } from './common';
import { TransactionDigest } from './common';
export declare type ObjectRef = {
    digest: TransactionDigest;
    objectId: string;
    version: number;
};
export declare type ObjectContentField = ObjectContent | string | boolean | number | number[] | ObjectContent[];
export declare type ObjectContentFields = Record<string, ObjectContentField>;
export declare type ObjectContent = {
    fields: ObjectContentFields;
    type: string;
};
export declare type MovePackageContent = Record<string, string>;
export declare type SuiObject = {
    contents: ObjectContent | MovePackageContent;
    owner: ObjectOwner;
    tx_digest: TransactionDigest;
};
export declare type ObjectExistsInfo = {
    objectRef: ObjectRef;
    objectType: ObjectType;
    object: SuiObject;
};
export declare type ObjectNotExistsInfo = {
    objectId: ObjectId;
};
export declare type ObjectStatus = 'Exists' | 'NotExists' | 'Deleted';
export declare type ObjectType = 'moveObject' | 'movePackage';
export declare type GetOwnedObjectRefsResponse = {
    objects: ObjectRef[];
};
export declare type GetObjectInfoResponse = {
    status: ObjectStatus;
    details: ObjectExistsInfo | ObjectNotExistsInfo | ObjectRef;
};
export declare type ObjectDigest = string;
export declare type ObjectId = string;
export declare type SequenceNumber = number;
export declare type RawObjectRef = [ObjectId, SequenceNumber, ObjectDigest];
export declare function getObjectExistsResponse(resp: GetObjectInfoResponse): ObjectExistsInfo | undefined;
export declare function getObjectType(resp: GetObjectInfoResponse): 'moveObject' | 'movePackage' | undefined;
export declare function getObjectContent(resp: GetObjectInfoResponse): ObjectContent | undefined;
export declare function getMovePackageContent(resp: GetObjectInfoResponse): MovePackageContent | undefined;
